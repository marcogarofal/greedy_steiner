================================================================================
DIJKSTRA SOLUTION SUMMARY WITH CUSTOM COST FUNCTION
================================================================================

ALGORITHM: DIJKSTRA (All discretionary nodes treated as mandatory)
COST FUNCTION: C(G) = Œ± * ACC + (1-Œ±) * AOC
Œ± = 0.5
ACC = (Œ£ w_ij * x_ij) / (n(n-1)) - Average Communication Cost
AOC = (Œ£ overload_j * d_j * y_j) / n - Average Operational Cost (OVERLOAD ONLY)
Where overload_j = max(0, usage_j - capacity_j) - only overload contributes to cost
      d_j = node degree, y_j = node selected

üèÜ DIJKSTRA SOLUTION:
----------------------------------------
Final score: 516.09
ACC component: 0.032184
AOC component: 0.000000
Custom cost function value: 0.032184
Discretionary ACTUALLY used: []
Connected weak nodes: 24
Failed connections: 0
Total edge cost: 28
Capacity efficiency cost: 0.000
Solution edges: [(1, 28), (28, 3), (28, 5), (28, 6), (28, 8), (28, 10), (28, 11), (28, 19), (28, 20), (28, 21), (28, 22), (28, 2), (28, 4), (28, 7), (28, 12), (9, 30), (30, 13), (30, 14), (30, 16), (30, 17), (15, 29), (29, 18), (29, 23), (29, 24)]
Capacity usage: {25: 0, 26: 0, 27: 0, 28: 15, 29: 4, 30: 5}

DIJKSTRA ALGORITHM DETAILS:
------------------------------
‚Ä¢ All discretionary nodes treated as mandatory power nodes
‚Ä¢ Used shortest path algorithm (Dijkstra) to connect each weak node
‚Ä¢ Greedy selection based on incremental cost function
‚Ä¢ No Steiner tree optimization - direct shortest paths only
